<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:jaxws="http://cxf.apache.org/jaxws"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.2.xsd
		http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.8.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
		http://cxf.apache.org/configuration/security http://cxf.apache.org/schemas/configuration/security.xsd">


	<context:annotation-config></context:annotation-config>
	<context:component-scan base-package="com.bugielmarek.crudone">
	</context:component-scan>
	<context:property-placeholder
		location="classpath:jdbc.properties" />
	<tx:annotation-driven transaction-manager="transactionManager" />

	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="com.bugielmarek.crudone.models" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="showSql" value="false" />
				<property name="databasePlatform" value="org.hibernate.dialect.MySQLDialect" />
			</bean>
		</property>
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>
	</bean>

	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory"></property>
	</bean>
	<bean id="exceptionTranslator"
		class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor">
	</bean>
	<bean id="beanPostProcessor"
		class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor">
	</bean>
	<jpa:repositories base-package="com.bugielmarek.crudone" />
	
	<security:authentication-manager>

		<security:authentication-provider>
			<security:jdbc-user-service
				data-source-ref="dataSource"
				authorities-by-username-query="select username, authority from users where binary username=?"
				users-by-username-query="select username, password, enabled from users where binary username=?"
				id="jdbcUserService" />
			<security:password-encoder ref="passwordEncoder"></security:password-encoder>
		</security:authentication-provider>
	</security:authentication-manager>

	<security:http pattern="/api/**" security="none" />
	<security:http pattern="/restclient/**" security="none" />

	<security:http use-expressions="true">

		<security:intercept-url access="permitAll" pattern="/error" />
		<security:intercept-url access="permitAll" pattern="/static/**" />
		<security:intercept-url access="permitAll" pattern="/login" />
		<security:intercept-url access="permitAll" pattern="/logout" />
		<security:intercept-url access="isAuthenticated()" pattern="/" />
		<security:intercept-url access="isAuthenticated()" pattern="/payments" />
		<security:intercept-url access="isAuthenticated()" pattern="/payments/payment/*" />
		<security:intercept-url access="isAuthenticated()" pattern="/payments/createpayment" />
		<security:intercept-url access="isAuthenticated()" pattern="/payments/editpayment/*" />
		<security:intercept-url access="isAuthenticated()" pattern="/payments/deletepayment/*" />
		<security:intercept-url access="isAuthenticated()" pattern="/payments/findpayment" />
		<security:intercept-url access="isAuthenticated()" pattern="/receivedcasefiles" />
		<security:intercept-url access="isAuthenticated()" pattern="/receivedcasefiles/receivedcasefile/*" />
		<security:intercept-url access="isAuthenticated()" pattern="/receivedcasefiles/createreceivedcasefile" />
		<security:intercept-url access="isAuthenticated()" pattern="/receivedcasefiles/editreceivedcasefile/*" />
		<security:intercept-url access="isAuthenticated()" pattern="/receivedcasefiles/deletereceivedcasefile/*" />
		<security:intercept-url access="isAuthenticated()" pattern="/receivedcasefiles/findreceivedcasefile" />
		<security:intercept-url access="isAuthenticated()" pattern="/contacts" />
		<security:intercept-url access="isAuthenticated()" pattern="/contacts/contact/*" />
		<security:intercept-url access="isAuthenticated()" pattern="/contacts/createcontact" />
		<security:intercept-url access="isAuthenticated()" pattern="/contacts/editcontact/*" />
		<security:intercept-url access="isAuthenticated()" pattern="/contacts/deletecontact/*" />
		<security:intercept-url access="isAuthenticated()" pattern="/contacts/findcontact" />
		<security:intercept-url access="isAuthenticated()" pattern="/issues" />
		<security:intercept-url access="isAuthenticated()" pattern="/issues/myissues" />
		<security:intercept-url access="isAuthenticated()" pattern="/issues/issue/*" />
		<security:intercept-url access="isAuthenticated()" pattern="/issues/createissue" />
		<security:intercept-url access="isAuthenticated()" pattern="/issues/editissue/*" />
		<security:intercept-url access="isAuthenticated()" pattern="/issues/deleteissue/*" />
		<security:intercept-url access="isAuthenticated()" pattern="/issues/findissue" />
		<security:intercept-url access="isAuthenticated()" pattern="/quote" />
		<security:intercept-url access="hasRole('ROLE_ADMIN')" pattern="/users" />
		<security:intercept-url access="hasRole('ROLE_ADMIN')" pattern="/users/user/*" />
		<security:intercept-url access="hasRole('ROLE_ADMIN')" pattern="/users/createuser" />
		<security:intercept-url access="hasRole('ROLE_ADMIN')" pattern="/users/edituser/*" />
		<security:intercept-url access="hasRole('ROLE_ADMIN')" pattern="/users/deleteuser/*" />
		<security:intercept-url access="denyAll" pattern="/**" />

		<security:form-login login-page="/login"
			authentication-failure-url="/login?error=true" />
		<security:logout logout-success-url="/login" />
		<security:access-denied-handler
			error-page="/denied" />
		<security:remember-me key="timetableWebappKey"
			user-service-ref="jdbcUserService" />
	</security:http>
	<security:global-method-security
		secured-annotations="enabled">
	</security:global-method-security>
	<bean id="passwordEncoder"
		class="org.springframework.security.crypto.password.StandardPasswordEncoder">
	</bean>
	
	<beans profile="apacheCommonsDbcp">
		<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
			destroy-method="close">
			<property name="driverClassName" value="${jdbc.driver}" />
			<property name="username" value="${jdbc.username}" />
			<property name="password" value="${jdbc.password}" />
			<property name="url" value="${jdbc.url}" />
		</bean>
	</beans>
	
	<beans profile="embeddedH2">
	<jdbc:embedded-database id="dataSource" type="H2"></jdbc:embedded-database>
	</beans>
	
</beans>
